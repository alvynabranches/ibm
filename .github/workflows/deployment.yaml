name: Build and Deploy REST API Application

on:
  push:
    branches:
      - main

env:
  ENV: prod
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ GKE_ZONE }}
  DEPLOYMENT_NAME: "api-prod-deployment"
  IMAGE: ibm
  TAG: latest

jobs:
  setup-build-publish-deploy:
    name: "Setup Build Publish Deploy to $ENV"
    runs-on: ubuntu-latest
    environment: $ENV

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install flake8
        # python -m pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    # # - name: Test with pytest
    # #   run: |
    # #     pytest

    - name: Setup Google Cloud CLI
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    - name: Configure Docker
      run: |
        gcloud --quiet auth configure-docker

    - name: Configure Kubernetes to New Version
      run: |
        gcloud components install gke-gcloud-auth-plugin

    - name: Get GKE Credentials
      run: |
        gcloud container clusters get-credentials "$GKE_CLUSTER" --project "$GKE_PROJECT" --zone "$GKE_ZONE"

    - name: Build Docker Image
      run: |
        docker build --tag "gcr.io/$GKE_PROJECT/$IMAGE:$TAG" .

    - name: Publish GCR
      run: |
        docker push "gcr.io/$GKE_PROJECT/$IMAGE:$TAG"

    - name: Publish GKE
      run: |
        kubectl apply -f "k8s/$ENV/app-pod.yaml"
        kubectl apply -f "k8s/$ENV/app-service.yaml"